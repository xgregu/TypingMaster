@inject ApiClient ApiClient

<div class="w-100" style="max-height: 70vh; height: 70vh; overflow-y: auto">
    <div class="d-flex justify-content-between">
        <span class="text-primary text-start mx-2">
            Ranking
        </span>
        <span class="text-secondary text-end mx-2">
            Wybierz test, aby wyświetlić szczegółowe statystyki
        </span>
    </div>

    <table class="table table-hover table-striped w-100">
        <thead class="table-active">
        <th class="w-25" scope="col">Data</th>
        <th class="w-50" scope="col">Imię</th>
        <th class="w-25" scope="col">Punkty</th>
        </thead>
        <tbody class="table-group-divider">
        <Virtualize ItemsProvider="GetTests" Context="test"  OverscanCount="20">
            <ItemContent>
                <tr @onclick="() => OnTestClicked(test)">
                    <td class="w-25">@test.StartTime.ToString("dd.MM.yyyy HH:mm")</td>
                    <td class="w-50">@test.ExecutorName</td>
                    <td class="w-25">@test.Statistics.OverallRating</td>
                </tr>
            </ItemContent>
            <Placeholder>
                <tr>
                    <td colspan="3" class="text-center">Ładuje dane...</td>
                </tr>
            </Placeholder>
        </Virtualize>
        </tbody>

    </table>

</div>
<TestStatisticModalComponent @ref="_testStatisticModalRef"/>

@code{

    private TestStatisticModalComponent _testStatisticModalRef = default!;

    private async ValueTask<ItemsProviderResult<TypingTestDto>> GetTests(ItemsProviderRequest request)
    {
        var getTestCountTask = ApiClient.GetTestCount();
        var getTestPageTask = ApiClient.GetTestPage(request.StartIndex, request.Count);

        await Task.WhenAll(getTestPageTask, getTestPageTask);

        var total = getTestCountTask.Result;
        var tests = getTestPageTask.Result ?? new List<TypingTestDto>();
        return new ItemsProviderResult<TypingTestDto>(tests, (int) total);
    }

    private async Task OnTestClicked(TypingTestDto test)
    {
        await _testStatisticModalRef.Show(test);
    }

}