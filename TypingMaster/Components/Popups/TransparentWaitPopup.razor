@inject ILogger<TransparentWaitPopup> Logger

<Modal @ref="_modalRef" Closing="e => Task.FromResult(e.Cancel = _cancelClose)">
    <ModalContent Centered="true" Style="background-color: transparent; border: 0" Shadow="Shadow.None">
        <ModalBody Style="background-color: transparent; border: 0; text-align: center;">
            <div class="m-3">
                <SpinKit Color="#0000ff" Type="SpinKitType.Chase" Size="5rem" Centered="true"/>
            </div>
        </ModalBody>
    </ModalContent>
</Modal>

@code {

    private Modal _modalRef;
    private bool _cancelClose;

    public async Task Show()
    {
        Logger.LogInformation("TransparentWaitPopup show");
        _cancelClose = true;
        _modalRef?.Show();
        await Task.Delay(500);
    }

    public Task Hide()
    {
        Logger.LogInformation("TransparentWaitPopup hide");
        _cancelClose = false;
        _modalRef?.Hide();
        return Task.CompletedTask;
    }

}