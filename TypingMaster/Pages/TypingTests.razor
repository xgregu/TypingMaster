@page "/TypingTests"
@inject IOptions<TypingTestOptions> Options

<PageTitle>Test</PageTitle>
<Div Style="text-align: center" Class="px-2">
    <Fields>
        <Field>
            <Heading Size="HeadingSize.Is5">Wybierz</Heading>
            <RadioGroup TValue="TypingTestType" Name="types" Color="Color.Light" Buttons @bind-CheckedValue="_typingTestType">
                <Radio Value="@TypingTestType.Minimalistic">Minimalistyczny</Radio>
                <Radio Value="@TypingTestType.Short">Krótki</Radio>
                <Radio Value="@TypingTestType.Average">Średni</Radio>
                <Radio Value="@TypingTestType.Long">Długi</Radio>
                <Radio Value="@TypingTestType.Verylong">Bardzo długi</Radio>
            </RadioGroup>
            <FieldHelp>
                <Text TextColor="TextColor.Danger">
                    Uwaga!
                </Text>
                <Text TextColor="TextColor.Secondary">
                    Długość testu wpływa na jego poziom trudności
                </Text>
            </FieldHelp>
        </Field>
    </Fields>
    <Button Color="Color.Primary" Clicked="@StartTest">Uruchom</Button>
    <Heading Size="HeadingSize.Is5" Class="mt-3">Ranking</Heading>
    <TestTableComponent @ref="_testTableComponent"></TestTableComponent>
</Div>
<TestComponent @ref="_testModalRef"></TestComponent>

@code {

    private TypingTestType _typingTestType = TypingTestType.Average;

    private TestComponent _testModalRef;
    private TestTableComponent _testTableComponent;
    private TypingTestTextOptions[] _typingTestTexts;

    protected override Task OnInitializedAsync()
    {
        _typingTestTexts = Options.Value.TypingTestTexts;
        return base.OnInitializedAsync();
    }

    private async Task StartTest()
    {
        var text = GetTypingTestText(_typingTestType);
        var test = await _testModalRef.ShowAndWaitForResult(_typingTestType, text);
        await _testTableComponent.ScrollToTest(test.Id);
    }

    private string GetTypingTestText(TypingTestType type) => _typingTestTexts.FirstOrDefault(x => x.Type == type)?.Text ?? "ERROR";
}